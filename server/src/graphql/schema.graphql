#graphql

# noinspection GraphQLMissingType,GraphQLUnresolvedReference

scalar Date
scalar Byte

type Video {
    title: String!
    path: String!
}

type Webring {
    url: String!
}

type ThemeColor {
    original: String!
    processed: String!
}

type ThemeColors {
    primary: ThemeColor!
    secondary: ThemeColor!
}

type Emoji {
    animated: Boolean
    name: String
    id: String
    createdTimestamp: String
    url: String
    identifier: String
}

type CustomStatus {
    state: String
    emoji: Emoji
}

type RPCTimestamps {
    start: String
    end: String
}

type RPCAssets {
    largeImage: String
    largeText: String
    smallImage: String
    smallText: String
}

type RichPresence {
    name: String!
    details: String
    state: String
    applicationId: String
    timestamps: RPCTimestamps
    assets: RPCAssets
    createdTimestamp: String
}

type Activity {
    customStatus: CustomStatus
    activities: [RichPresence!]
}

type Badge {
    id: String!
    description: String!
}

type DiscordInfo {
    id: String
    username: String
    globalName: String
    avatar: String
    avatarDecoration: String
    banner: String
    theme: String
    activity: Activity
    seperatorColor: String
    themeColors: ThemeColors
    bio: String
    pronouns: String
    badges: [Badge!]
}

type Data {
    videos: [Video!]!
    webring: [Webring!]!
#    discordInfo: DiscordInfo!
}

type Query {
    getData(videoFormat: String!): Data! @rateLimit(limit: 60, duration: 10)
    discordInfo: DiscordInfo! @rateLimit(limit: 60, duration: 10)
}

# Mutations ###########################################################################################################################################################################

# type Mutation {
# }
